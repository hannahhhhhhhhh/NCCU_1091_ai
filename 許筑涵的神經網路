{"nbformat":4,"nbformat_minor":0,"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.7.3"},"colab":{"name":"許筑涵的神經網路","provenance":[{"file_id":"https://github.com/yenlung/Deep-Learning-Basics/blob/master/01%20%E6%A8%99%E6%BA%96%E7%9A%84%20Fully%20Connected%20(Dense)%20NN.ipynb","timestamp":1602662061148}]}},"cells":[{"cell_type":"code","metadata":{"id":"ruBDZN1bGhAM"},"source":["%matplotlib inline\n","\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import pandas as pd"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"0-vXHb-zGhAe"},"source":["from tensorflow.keras.utils import to_categorical\n","from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import Dense\n","from tensorflow.keras.optimizers import SGD"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"xT2yfMYdGhAp"},"source":["### 1. 讀入 MNSIT 數據集"]},{"cell_type":"code","metadata":{"id":"X4cdJkV6GhAq"},"source":["from tensorflow.keras.datasets import mnist"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"X6Ktd0u7GhA4","executionInfo":{"status":"ok","timestamp":1603365554781,"user_tz":-480,"elapsed":4894,"user":{"displayName":"許筑涵","photoUrl":"","userId":"01849966040229564273"}},"outputId":"40edf817-90b9-4b60-ea13-5e706b661bc5","colab":{"base_uri":"https://localhost:8080/","height":51}},"source":["(x_train, y_train), (x_test, y_test) = mnist.load_data()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/mnist.npz\n","11493376/11490434 [==============================] - 0s 0us/step\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"XPEjxzrOGhA_"},"source":["#### 你也可以讀入 Fasion 版的 MNIST"]},{"cell_type":"code","metadata":{"id":"GSmyA1fRGhBA"},"source":["# from tensorflow.keras.datasets import fashion_mnist\n","# (x_train, y_train), (x_test, y_test) = fashion_mnist.load_data()"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Y7hX0f2RGhBG"},"source":["### 2. 欣賞數據集內容 (非執行必要)"]},{"cell_type":"code","metadata":{"id":"58rzXO1VGhBH","executionInfo":{"status":"ok","timestamp":1603365554785,"user_tz":-480,"elapsed":4881,"user":{"displayName":"許筑涵","photoUrl":"","userId":"01849966040229564273"}},"outputId":"30c4c14b-8fc8-45d8-ee13-bebc81bf83bb","colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["len(x_train)  #數學學老師有六萬筆數學題目要考我"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["60000"]},"metadata":{"tags":[]},"execution_count":6}]},{"cell_type":"code","metadata":{"id":"ZqCKSnPRGhBN","executionInfo":{"status":"ok","timestamp":1603365554786,"user_tz":-480,"elapsed":4870,"user":{"displayName":"許筑涵","photoUrl":"","userId":"01849966040229564273"}},"outputId":"4454da5f-b89d-4107-960f-393a908b4996","colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["len(x_test) #數學老師給我一萬題回家寫，y_test是回家功課答案"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["10000"]},"metadata":{"tags":[]},"execution_count":7}]},{"cell_type":"code","metadata":{"id":"FBRgtzsrGhBT"},"source":["n = 9487"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"iSru3ptuGhBY","executionInfo":{"status":"ok","timestamp":1603365554788,"user_tz":-480,"elapsed":4857,"user":{"displayName":"許筑涵","photoUrl":"","userId":"01849966040229564273"}},"outputId":"bb6e805f-ff6f-4c2c-c817-15f7b7914435","colab":{"base_uri":"https://localhost:8080/","height":1000}},"source":["x_train[n]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 240,\n","        253, 165,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  32, 241,\n","        252, 252,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   2, 141, 252,\n","        252, 252,  98,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  30, 252, 252,\n","        252, 252, 149,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  21, 217, 252,\n","        252, 252, 149,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 134, 252,\n","        252, 252, 223,  31,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 134, 252,\n","        252, 252, 253,  44,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   8, 239,\n","        252, 252, 253,  44,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 238,\n","        252, 252, 253,  44,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 238,\n","        252, 252, 253,  44,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 178,\n","        253, 253, 255, 106,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  90,\n","        252, 252, 253, 206,  21,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  90,\n","        252, 252, 253, 252,  88,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  90,\n","        252, 252, 253, 252,  88,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  63,\n","        234, 252, 253, 252, 220,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","        176, 252, 253, 252, 237,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","         45, 252, 253, 252, 245,  71,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","         29, 215, 253, 252, 237,   8,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0, 149, 253, 252, 237,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,  61, 165, 252, 237,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0]], dtype=uint8)"]},"metadata":{"tags":[]},"execution_count":9}]},{"cell_type":"code","metadata":{"id":"4I-RaYuxGhBd","executionInfo":{"status":"ok","timestamp":1603365554790,"user_tz":-480,"elapsed":4836,"user":{"displayName":"許筑涵","photoUrl":"","userId":"01849966040229564273"}},"outputId":"59a6b542-fa76-412e-ce0b-48a3f070e1fa","colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["y_train[n]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1"]},"metadata":{"tags":[]},"execution_count":10}]},{"cell_type":"code","metadata":{"id":"hF9YrSa-GhBg","executionInfo":{"status":"ok","timestamp":1603365554793,"user_tz":-480,"elapsed":4822,"user":{"displayName":"許筑涵","photoUrl":"","userId":"01849966040229564273"}},"outputId":"cae45816-eb52-4c5a-c8da-009d84b6345f","colab":{"base_uri":"https://localhost:8080/","height":282}},"source":["plt.imshow(x_train[n], cmap='Greys')"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.image.AxesImage at 0x7f4a44070278>"]},"metadata":{"tags":[]},"execution_count":11},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"9XqZ110eGhBk"},"source":["### 3. 資料整理"]},{"cell_type":"markdown","metadata":{"id":"q_WaU3YfGhBk"},"source":["先看個範例, 因為 `numpy` 「廣播」的特性, 我們對 `array` 中所有數字要同除以一個數可瞬間完成!"]},{"cell_type":"code","metadata":{"id":"6cyemKlVGhBl"},"source":["x_train = x_train.reshape(60000, 784)/255 #除以255讓X-train的數值介於0-1之間\n","x_test = x_test.reshape(10000, 784)/255"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"p8RUTPCeGhBo"},"source":["y_train = to_categorical(y_train, 10) \n","y_test = to_categorical(y_test, 10)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"OIDz_JTGGhBr"},"source":["### 4. step 1: 打造神經網路"]},{"cell_type":"code","metadata":{"id":"xdzm-E9rGhBs"},"source":["model = Sequential()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"GreuYnmuGhBu"},"source":["model.add(Dense(10, input_dim=784, activation='relu')) #在第一層設置10個神經元"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"yAipD6_LGhBx"},"source":["model.add(Dense(120, activation='relu'))  #在第二層設置120個神經元"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"nF2iP6s7GhBz"},"source":["model.add(Dense(10, activation='relu')) #在第三層設置10個神經元"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"cbEg5WGsGhB4"},"source":["#### 組裝我們的神經網路"]},{"cell_type":"code","metadata":{"id":"v8-1qztHGhB4"},"source":["model.compile(loss='mse', optimizer=SGD(lr=0.087), \n","              metrics=['accuracy'])"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"VvMap_2YGhB8"},"source":["#### 欣賞我們的作品"]},{"cell_type":"code","metadata":{"id":"a2PybBhCGhB9","executionInfo":{"status":"ok","timestamp":1603365592521,"user_tz":-480,"elapsed":936,"user":{"displayName":"許筑涵","photoUrl":"","userId":"01849966040229564273"}},"outputId":"fe8b887b-d16d-424b-e3f3-31230422f228","colab":{"base_uri":"https://localhost:8080/","height":289}},"source":["model.summary()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Model: \"sequential\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","dense (Dense)                (None, 10)                7850      \n","_________________________________________________________________\n","dense_1 (Dense)              (None, 120)               1320      \n","_________________________________________________________________\n","dense_2 (Dense)              (None, 10)                1210      \n","_________________________________________________________________\n","dense_3 (Dense)              (None, 10)                110       \n","=================================================================\n","Total params: 10,490\n","Trainable params: 10,490\n","Non-trainable params: 0\n","_________________________________________________________________\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"IRhVmnGwGhB_"},"source":["### 5. step 2: 訓練"]},{"cell_type":"code","metadata":{"scrolled":true,"id":"Kh8JwuquGhCA","executionInfo":{"status":"ok","timestamp":1603365565200,"user_tz":-480,"elapsed":15167,"user":{"displayName":"許筑涵","photoUrl":"","userId":"01849966040229564273"}},"outputId":"24e74b04-2143-4574-b5c7-4b2ba505fde5","colab":{"base_uri":"https://localhost:8080/","height":374}},"source":["model.fit(x_train, y_train, batch_size=100, epochs=10) #batch_size=100以一百題分六萬題的考卷，所以一份考卷會練六次 ＃epochs=10這份考卷寫十次"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Epoch 1/10\n","600/600 [==============================] - 1s 1ms/step - loss: 0.0892 - accuracy: 0.1616\n","Epoch 2/10\n","600/600 [==============================] - 1s 1ms/step - loss: 0.0843 - accuracy: 0.2181\n","Epoch 3/10\n","600/600 [==============================] - 1s 1ms/step - loss: 0.0753 - accuracy: 0.3661\n","Epoch 4/10\n","600/600 [==============================] - 1s 1ms/step - loss: 0.0594 - accuracy: 0.6011\n","Epoch 5/10\n","600/600 [==============================] - 1s 2ms/step - loss: 0.0387 - accuracy: 0.7828\n","Epoch 6/10\n","600/600 [==============================] - 1s 2ms/step - loss: 0.0267 - accuracy: 0.8437\n","Epoch 7/10\n","600/600 [==============================] - 1s 2ms/step - loss: 0.0221 - accuracy: 0.8650\n","Epoch 8/10\n","600/600 [==============================] - 1s 2ms/step - loss: 0.0198 - accuracy: 0.8753\n","Epoch 9/10\n","600/600 [==============================] - 1s 2ms/step - loss: 0.0184 - accuracy: 0.8832\n","Epoch 10/10\n","600/600 [==============================] - 1s 2ms/step - loss: 0.0174 - accuracy: 0.8892\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["<tensorflow.python.keras.callbacks.History at 0x7f4a43bccf28>"]},"metadata":{"tags":[]},"execution_count":20}]},{"cell_type":"markdown","metadata":{"id":"JLsrLn6WGhCD"},"source":["### 6. step 3: 預測 (testing)"]},{"cell_type":"code","metadata":{"id":"ydk9__RXGhCD","executionInfo":{"status":"ok","timestamp":1603365565686,"user_tz":-480,"elapsed":15648,"user":{"displayName":"許筑涵","photoUrl":"","userId":"01849966040229564273"}},"outputId":"cb628f29-208d-483f-d701-4c938d845b13","colab":{"base_uri":"https://localhost:8080/","height":88}},"source":["predict = model.predict_classes(x_test) #我的正確答案 "],"execution_count":null,"outputs":[{"output_type":"stream","text":["WARNING:tensorflow:From <ipython-input-21-b28628c8f223>:1: Sequential.predict_classes (from tensorflow.python.keras.engine.sequential) is deprecated and will be removed after 2021-01-01.\n","Instructions for updating:\n","Please use instead:* `np.argmax(model.predict(x), axis=-1)`,   if your model does multi-class classification   (e.g. if it uses a `softmax` last-layer activation).* `(model.predict(x) > 0.5).astype(\"int32\")`,   if your model does binary classification   (e.g. if it uses a `sigmoid` last-layer activation).\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"QilrIq2uGhCG","executionInfo":{"status":"ok","timestamp":1603365566331,"user_tz":-480,"elapsed":16283,"user":{"displayName":"許筑涵","photoUrl":"","userId":"01849966040229564273"}},"outputId":"ab450992-d0af-498b-cda6-85c09e7cf6b4","colab":{"base_uri":"https://localhost:8080/","height":282}},"source":["n = 4679\n","\n","print('神經網路預測是:', predict[n])\n","plt.imshow(x_test[n].reshape(28,28), cmap='Greys');"],"execution_count":null,"outputs":[{"output_type":"stream","text":["神經網路預測是: 9\n"],"name":"stdout"},{"output_type":"display_data","data":{"image/png":"iVBORw0KGgoAAAANSUhEUgAAAPsAAAD4CAYAAAAq5pAIAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAOQ0lEQVR4nO3df4xU9bnH8c8DloBSFNkV0eLd3sZ/5EZpMyEaDIE0t1H/wZqI8EfF2NytRhKa1OSiGIvGPwixxRpNk+VKSpVr0wRQYtTiRYxpSKqjchUw1x+4Wgmyg5AI8QcKz/1jD81Kd74zzDkzZ+B5v5LNzJ5nzjlPTvhwZs/3zHzN3QXgzDem7AYAdAZhB4Ig7EAQhB0IgrADQZzVyZ319PR4X19fJ3cJhDI4OKgDBw7YaLVcYTezayT9TtJYSf/l7itTr+/r61O1Ws2zSwAJlUqlbq3lt/FmNlbSo5KulXSZpEVmdlmr2wPQXnn+Zp8l6T133+PuRyX9SdL8YtoCULQ8Yb9Y0t9H/P5xtuxbzKzfzKpmVq3Vajl2ByCPtl+Nd/cBd6+4e6W3t7fduwNQR56w75U0fcTv38uWAehCecL+qqRLzez7ZjZO0kJJm4tpC0DRWh56c/dvzGyJpL9oeOhtrbvvKqwzAIXKNc7u7s9KeragXgC0EbfLAkEQdiAIwg4EQdiBIAg7EARhB4Ig7EAQhB0IgrADQRB2IAjCDgRB2IEgCDsQBGEHgiDsQBCEHQiCsANBEHYgCMIOBEHYgSAIOxAEYQeCIOxAEIQdCIKwA0EQdiAIwg4EQdiBIAg7EARhB4LINWWzmQ1KOizpmKRv3L1SRFMAipcr7Jl57n6ggO0AaCPexgNB5A27S9piZq+ZWf9oLzCzfjOrmlm1Vqvl3B2AVuUN+9Xu/iNJ10q6w8zmnPwCdx9w94q7V3p7e3PuDkCrcoXd3fdmj0OSNkmaVURTAIrXctjN7Bwz++6J55J+ImlnUY0BKFaeq/FTJW0ysxPb+W93f76QrgAUruWwu/seSVcU2AuANmLoDQiCsANBEHYgCMIOBEHYgSCK+CAMzmDHjh1L1t09WR8aGqpbO3jwYHLdl156KVkv0+23356sjx07tkOdNI8zOxAEYQeCIOxAEIQdCIKwA0EQdiAIwg4EwTj7aeD48ePJ+tdff93ytg8dOpSsz549O1kfHBxsed+ns+efT3+a+5lnnulQJ83jzA4EQdiBIAg7EARhB4Ig7EAQhB0IgrADQTDO3gFHjx5N1g8fPpysP/DAA8n6ww8/fMo9nQ7Gjx+frN9www3J+qZNm+rWJk6c2FJPJzz33HO51i8DZ3YgCMIOBEHYgSAIOxAEYQeCIOxAEIQdCIJx9ialvh99y5YtyXWXL1+erL/xxhst9dSMnp6eZH3ChAnJeup73yXpq6++OuWemrV48eJc+059t/uqVauS62ZTkdfVjZ9Xb6Thmd3M1prZkJntHLHsfDN7wczezR4nt7dNAHk18zb+D5KuOWnZMklb3f1SSVuz3wF0sYZhd/eXJZ08T898Seuy5+skXV9wXwAK1uoFuqnuvi97/omkqfVeaGb9ZlY1s2qtVmtxdwDyyn013oevXNW9euXuA+5ecfdKb29v3t0BaFGrYd9vZtMkKXtMX7IFULpWw75Z0olxkcWSni6mHQDtYo3m1zazJyXNldQjab+kX0t6StKfJV0i6UNJC9w9Pdm2pEql4tVqNWfL7dHoOGzcuLFubcGCBbn2fdZZ6dsd5syZk6zfeeeddWtXXXVVct1JkyYl648//niyfssttyTr3erIkSPJeqP7D7pVpVJRtVod9SaBhjfVuPuiOqUf5+oKQEdxuywQBGEHgiDsQBCEHQiCsANBhPmIa56hNSnf8Nrll1+erK9ZsyZZr1QqLe87rz179pS273b64osvkvXTdegthTM7EARhB4Ig7EAQhB0IgrADQRB2IAjCDgQRZpx9w4YNyfpNN93U8rYbjaO/+OKLyfrkye37ct4DBw4k6ytWrEjWG91/kMeMGTOS9blz5ybrjz76aMv7HhgYSNaXLTvzvkOVMzsQBGEHgiDsQBCEHQiCsANBEHYgCMIOBBFmnP3GG29M1seMSf+/d+6559atbdu2LbnuxIkTk/Vdu3Yl66tXr07WUw4dOpSsP/XUUy1vW2o8Fr5y5cq6tUb3J2zfvj1ZzzPOHhFndiAIwg4EQdiBIAg7EARhB4Ig7EAQhB0IIsw4e19fX7L+0UcfJeup7xlv9Hn1d955J1lfvnx5sl6mm2++OVm/7777kvVLLrmk5X1/8MEHLa/byKJF9SYnPnM1PLOb2VozGzKznSOWrTCzvWa2I/u5rr1tAsirmbfxf5B0zSjLV7v7zOzn2WLbAlC0hmF395clHexALwDaKM8FuiVm9mb2Nr/ul6iZWb+ZVc2sWqvVcuwOQB6thv33kn4gaaakfZJ+U++F7j7g7hV3r/T29ra4OwB5tRR2d9/v7sfc/bikNZJmFdsWgKK1FHYzmzbi159K2lnvtQC6Q8NxdjN7UtJcST1m9rGkX0uaa2YzJbmkQUm/aGOPhXjllVeS9QsvvDBZP3r0aN1ao8/Klyn1OXxJWr9+fbI+b968ZH38+PGn3NMJje5PWLp0acvbbuSCCy5o27a7VcOwu/todx881oZeALQRt8sCQRB2IAjCDgRB2IEgCDsQRJiPuPb09CTrS5YsSdYfeeSRItsp1OzZs+vWVq1alVz3yiuvLLqdpt11113J+ueff55r+7feemvd2rhx43Jt+3TEmR0IgrADQRB2IAjCDgRB2IEgCDsQBGEHgggzzm5myfr999+frM+YMaNu7cEHH0yu+/777yfrqXFySbr33ntbXn/ChAnJdc9kqeM2duzYDnbSHTizA0EQdiAIwg4EQdiBIAg7EARhB4Ig7EAQYcbZG2n0lcv9/f11awsXLkyu+9lnnyXrU6ZMSdYjj5XnMXly3VnJQuLMDgRB2IEgCDsQBGEHgiDsQBCEHQiCsANBMM5egEmTJuWqn8l2795dt7Zz584OdoKGZ3Yzm25m28xst5ntMrOl2fLzzewFM3s3e+QOBqCLNfM2/htJv3L3yyRdKekOM7tM0jJJW939Uklbs98BdKmGYXf3fe7+evb8sKS3JV0sab6kddnL1km6vl1NAsjvlC7QmVmfpB9K+pukqe6+Lyt9ImlqnXX6zaxqZtVarZajVQB5NB12M5soaYOkX7r7tz7Z4e4uyUdbz90H3L3i7pXe3t5czQJoXVNhN7PvaDjo6919Y7Z4v5lNy+rTJA21p0UARWg49GbD38H8mKS33f23I0qbJS2WtDJ7fLotHeK0duTIkbq1L7/8Mte2b7vttmT97LPPzrX9M00z4+yzJf1M0ltmtiNbdreGQ/5nM/u5pA8lLWhPiwCK0DDs7v5XSfVmWPhxse0AaBdulwWCIOxAEIQdCIKwA0EQdiAIPuKK09Y999yTrI8Zw7lsJI4GEARhB4Ig7EAQhB0IgrADQRB2IAjCDgTBODu61hVXXJGsn3feeR3q5MzAmR0IgrADQRB2IAjCDgRB2IEgCDsQBGEHgmCcHbl8+umnyfoTTzzR8rbnzZuXrE+YMKHlbUfEmR0IgrADQRB2IAjCDgRB2IEgCDsQBGEHgmhmfvbpkv4oaaoklzTg7r8zsxWS/kNSLXvp3e7+bLsaRXeaMmVKsv7QQw/VrW3fvr3odpDQzE0130j6lbu/bmbflfSamb2Q1Va7+4Ptaw9AUZqZn32fpH3Z88Nm9raki9vdGIBindLf7GbWJ+mHkv6WLVpiZm+a2Vozm1xnnX4zq5pZtVarjfYSAB3QdNjNbKKkDZJ+6e6fSfq9pB9ImqnhM/9vRlvP3QfcveLuld7e3gJaBtCKpsJuZt/RcNDXu/tGSXL3/e5+zN2PS1ojaVb72gSQV8Owm5lJekzS2+7+2xHLp4142U8l7Sy+PQBFaeZq/GxJP5P0lpntyJbdLWmRmc3U8HDcoKRftKVDnNZS0yZv3rw5uS5fFV2sZq7G/1WSjVJiTB04jXAHHRAEYQeCIOxAEIQdCIKwA0EQdiAIvkoapbnooovKbiEUzuxAEIQdCIKwA0EQdiAIwg4EQdiBIAg7EIS5e+d2ZlaT9OGIRT2SDnSsgVPTrb11a18SvbWqyN7+xd1H/f63job9n3ZuVnX3SmkNJHRrb93al0RvrepUb7yNB4Ig7EAQZYd9oOT9p3Rrb93al0RvrepIb6X+zQ6gc8o+swPoEMIOBFFK2M3sGjP7PzN7z8yWldFDPWY2aGZvmdkOM6uW3MtaMxsys50jlp1vZi+Y2bvZ46hz7JXU2woz25sdux1mdl1JvU03s21mttvMdpnZ0mx5qccu0VdHjlvH/2Y3s7GS3pH075I+lvSqpEXuvrujjdRhZoOSKu5e+g0YZjZH0hFJf3T3f8uWrZJ00N1XZv9RTnb3/+yS3lZIOlL2NN7ZbEXTRk4zLul6SbeoxGOX6GuBOnDcyjizz5L0nrvvcfejkv4kaX4JfXQ9d39Z0sGTFs+XtC57vk7D/1g6rk5vXcHd97n769nzw5JOTDNe6rFL9NURZYT9Ykl/H/H7x+qu+d5d0hYze83M+stuZhRT3X1f9vwTSVPLbGYUDafx7qSTphnvmmPXyvTneXGB7p9d7e4/knStpDuyt6tdyYf/BuumsdOmpvHulFGmGf+HMo9dq9Of51VG2PdKmj7i9+9ly7qCu+/NHockbVL3TUW9/8QMutnjUMn9/EM3TeM92jTj6oJjV+b052WE/VVJl5rZ981snKSFktLTeXaImZ2TXTiRmZ0j6SfqvqmoN0tanD1fLOnpEnv5lm6ZxrveNOMq+diVPv25u3f8R9J1Gr4i/76k5WX0UKevf5X0v9nPrrJ7k/Skht/Wfa3haxs/lzRF0lZJ70r6H0nnd1Fvj0t6S9KbGg7WtJJ6u1rDb9HflLQj+7mu7GOX6Ksjx43bZYEguEAHBEHYgSAIOxAEYQeCIOxAEIQdCIKwA0H8P+9fPfVBZRPoAAAAAElFTkSuQmCC\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"lGrGlXIrs_F4","executionInfo":{"status":"ok","timestamp":1603365566332,"user_tz":-480,"elapsed":16275,"user":{"displayName":"許筑涵","photoUrl":"","userId":"01849966040229564273"}},"outputId":"5bf5ee44-d8df-4526-e715-832ee01ee84a","colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["score = model.evaluate(x_test, y_test) #最後用正式考試的考卷來考試，我的神經網路得了88.5分"],"execution_count":null,"outputs":[{"output_type":"stream","text":["313/313 [==============================] - 0s 903us/step - loss: 0.0163 - accuracy: 0.8939\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"wyzxdPRms7i5","executionInfo":{"status":"ok","timestamp":1603365566333,"user_tz":-480,"elapsed":16262,"user":{"displayName":"許筑涵","photoUrl":"","userId":"01849966040229564273"}},"outputId":"3a31e147-f440-45d6-8414-dd8e6167841a","colab":{"base_uri":"https://localhost:8080/","height":51}},"source":["print('loss:', score[0])\n","print('正確率', score[1])"],"execution_count":null,"outputs":[{"output_type":"stream","text":["loss: 0.01628214307129383\n","正確率 0.8938999772071838\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"bRISe2MqGhCJ"},"source":["### 7. 儲存我們的 model"]},{"cell_type":"code","metadata":{"id":"asB0TgO7GhCJ"},"source":["model.save(\"my_nn.h5\")"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"enlKpUYMhXFF"},"source":[""],"execution_count":null,"outputs":[]}]}